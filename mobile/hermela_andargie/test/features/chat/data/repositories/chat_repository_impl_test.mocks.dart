// Mocks generated by Mockito 5.4.6 from annotations
// in hermela_andargie/test/features/chat/data/repositories/chat_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:hermela_andargie/features/chat/data/datasources/chat_local_data_source.dart'
    as _i6;
import 'package:hermela_andargie/features/chat/data/datasources/chat_remote_data_source.dart'
    as _i4;
import 'package:hermela_andargie/features/chat/data/datasources/chat_socket_data_source.dart'
    as _i7;
import 'package:hermela_andargie/features/chat/data/models/chat_model.dart'
    as _i3;
import 'package:hermela_andargie/features/chat/data/models/message_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMessageModel_0 extends _i1.SmartFake implements _i2.MessageModel {
  _FakeMessageModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeChatModel_1 extends _i1.SmartFake implements _i3.ChatModel {
  _FakeChatModel_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ChatRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatRemoteDataSource extends _i1.Mock
    implements _i4.ChatRemoteDataSource {
  MockChatRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i3.ChatModel>> getMyChats() =>
      (super.noSuchMethod(
            Invocation.method(#getMyChats, []),
            returnValue: _i5.Future<List<_i3.ChatModel>>.value(
              <_i3.ChatModel>[],
            ),
          )
          as _i5.Future<List<_i3.ChatModel>>);

  @override
  _i5.Future<List<_i2.MessageModel>> getChatMessages(String? chatId) =>
      (super.noSuchMethod(
            Invocation.method(#getChatMessages, [chatId]),
            returnValue: _i5.Future<List<_i2.MessageModel>>.value(
              <_i2.MessageModel>[],
            ),
          )
          as _i5.Future<List<_i2.MessageModel>>);

  @override
  _i5.Future<_i2.MessageModel> sendMessage({
    required String? chatId,
    required String? content,
    required String? type,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendMessage, [], {
              #chatId: chatId,
              #content: content,
              #type: type,
            }),
            returnValue: _i5.Future<_i2.MessageModel>.value(
              _FakeMessageModel_0(
                this,
                Invocation.method(#sendMessage, [], {
                  #chatId: chatId,
                  #content: content,
                  #type: type,
                }),
              ),
            ),
          )
          as _i5.Future<_i2.MessageModel>);

  @override
  _i5.Future<_i3.ChatModel> initiateChat(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#initiateChat, [userId]),
            returnValue: _i5.Future<_i3.ChatModel>.value(
              _FakeChatModel_1(
                this,
                Invocation.method(#initiateChat, [userId]),
              ),
            ),
          )
          as _i5.Future<_i3.ChatModel>);

  @override
  _i5.Future<void> deleteChat(String? chatId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteChat, [chatId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [ChatLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatLocalDataSource extends _i1.Mock
    implements _i6.ChatLocalDataSource {
  MockChatLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> cacheChats(List<_i3.ChatModel>? chats) =>
      (super.noSuchMethod(
            Invocation.method(#cacheChats, [chats]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.ChatModel>> getCachedChats() =>
      (super.noSuchMethod(
            Invocation.method(#getCachedChats, []),
            returnValue: _i5.Future<List<_i3.ChatModel>>.value(
              <_i3.ChatModel>[],
            ),
          )
          as _i5.Future<List<_i3.ChatModel>>);

  @override
  _i5.Future<void> cacheMessages(
    String? chatId,
    List<_i2.MessageModel>? messages,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#cacheMessages, [chatId, messages]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<List<_i2.MessageModel>> getCachedMessages(String? chatId) =>
      (super.noSuchMethod(
            Invocation.method(#getCachedMessages, [chatId]),
            returnValue: _i5.Future<List<_i2.MessageModel>>.value(
              <_i2.MessageModel>[],
            ),
          )
          as _i5.Future<List<_i2.MessageModel>>);
}

/// A class which mocks [ChatSocketDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatSocketDataSource extends _i1.Mock
    implements _i7.ChatSocketDataSource {
  MockChatSocketDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i2.MessageModel> get onMessageDelivered =>
      (super.noSuchMethod(
            Invocation.getter(#onMessageDelivered),
            returnValue: _i5.Stream<_i2.MessageModel>.empty(),
          )
          as _i5.Stream<_i2.MessageModel>);

  @override
  _i5.Stream<_i2.MessageModel> get onMessageReceived =>
      (super.noSuchMethod(
            Invocation.getter(#onMessageReceived),
            returnValue: _i5.Stream<_i2.MessageModel>.empty(),
          )
          as _i5.Stream<_i2.MessageModel>);

  @override
  void connect() => super.noSuchMethod(
    Invocation.method(#connect, []),
    returnValueForMissingStub: null,
  );

  @override
  void disconnect() => super.noSuchMethod(
    Invocation.method(#disconnect, []),
    returnValueForMissingStub: null,
  );

  @override
  void sendMessage({
    required String? chatId,
    required String? content,
    required String? type,
  }) => super.noSuchMethod(
    Invocation.method(#sendMessage, [], {
      #chatId: chatId,
      #content: content,
      #type: type,
    }),
    returnValueForMissingStub: null,
  );
}
