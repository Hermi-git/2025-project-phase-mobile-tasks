// Mocks generated by Mockito 5.4.6 from annotations
// in hermela_andargie/test/features/auth/data/datasources/auth_local_data_source_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:hermela_andargie/core/storage/secure_storage.dart' as _i2;
import 'package:hermela_andargie/features/auth/domain/entities/auth_tokens.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SecuredStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecuredStorage extends _i1.Mock implements _i2.SecuredStorage {
  MockSecuredStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> writeToken(_i4.AuthTokens? tokens) =>
      (super.noSuchMethod(
            Invocation.method(#writeToken, [tokens]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<_i4.AuthTokens?> readToken() =>
      (super.noSuchMethod(
            Invocation.method(#readToken, []),
            returnValue: _i3.Future<_i4.AuthTokens?>.value(),
          )
          as _i3.Future<_i4.AuthTokens?>);

  @override
  _i3.Future<void> deleteToken() =>
      (super.noSuchMethod(
            Invocation.method(#deleteToken, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
