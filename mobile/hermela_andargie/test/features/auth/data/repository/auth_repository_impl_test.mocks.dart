// Mocks generated by Mockito 5.4.6 from annotations
// in hermela_andargie/test/features/auth/data/repository/auth_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:hermela_andargie/features/auth/data/datasources/auth_local_data_source.dart'
    as _i6;
import 'package:hermela_andargie/features/auth/data/datasources/auth_remote_data_source.dart'
    as _i4;
import 'package:hermela_andargie/features/auth/data/models/auth_tokens_model.dart'
    as _i2;
import 'package:hermela_andargie/features/auth/data/models/user_model.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthTokensModel_0 extends _i1.SmartFake
    implements _i2.AuthTokensModel {
  _FakeAuthTokensModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserModel_1 extends _i1.SmartFake implements _i3.UserModel {
  _FakeUserModel_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i4.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.AuthTokensModel> login({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#login, [], {#email: email, #password: password}),
            returnValue: _i5.Future<_i2.AuthTokensModel>.value(
              _FakeAuthTokensModel_0(
                this,
                Invocation.method(#login, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i5.Future<_i2.AuthTokensModel>);

  @override
  _i5.Future<_i3.UserModel> register({
    required String? name,
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#register, [], {
              #name: name,
              #email: email,
              #password: password,
            }),
            returnValue: _i5.Future<_i3.UserModel>.value(
              _FakeUserModel_1(
                this,
                Invocation.method(#register, [], {
                  #name: name,
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.UserModel>);

  @override
  _i5.Future<_i3.UserModel> getCurrentUser(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, [token]),
            returnValue: _i5.Future<_i3.UserModel>.value(
              _FakeUserModel_1(
                this,
                Invocation.method(#getCurrentUser, [token]),
              ),
            ),
          )
          as _i5.Future<_i3.UserModel>);
}

/// A class which mocks [AuthLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthLocalDataSource extends _i1.Mock
    implements _i6.AuthLocalDataSource {
  MockAuthLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> cacheTokens(_i2.AuthTokensModel? tokens) =>
      (super.noSuchMethod(
            Invocation.method(#cacheTokens, [tokens]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.AuthTokensModel?> getTokens() =>
      (super.noSuchMethod(
            Invocation.method(#getTokens, []),
            returnValue: _i5.Future<_i2.AuthTokensModel?>.value(),
          )
          as _i5.Future<_i2.AuthTokensModel?>);

  @override
  _i5.Future<void> clearTokens() =>
      (super.noSuchMethod(
            Invocation.method(#clearTokens, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}
